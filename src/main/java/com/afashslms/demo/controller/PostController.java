package com.afashslms.demo.controller;

import com.afashslms.demo.domain.Post;
import com.afashslms.demo.service.PostService;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.security.Principal;
import java.time.LocalDateTime;
import java.util.List;

@Controller
@RequiredArgsConstructor
@RequestMapping("/posts")
public class PostController {

    private final PostService postService;

    // Í≤åÏãúÍ∏Ä Î™©Î°ù
    @GetMapping
    public String listPosts(Model model) {
        List<Post> posts = postService.getAllPosts();
        model.addAttribute("posts", posts);
        return "post/list";  // templates/post/list.html
    }

    // Í≤åÏãúÍ∏Ä ÏÉÅÏÑ∏
    @GetMapping("/{postId}")
    public String viewPost(@PathVariable String postId, Model model) {
        postService.incrementViewCount(postId); // üëà Ï°∞ÌöåÏàò Ï¶ùÍ∞Ä Î®ºÏ†Ä
        Post post = postService.getPost(postId);
        model.addAttribute("post", post);
        return "post/view"; // templates/post/view.html
    }

    // Í∏ÄÏì∞Í∏∞ Ìèº
    @GetMapping("/new")
    public String showCreateForm() {
        return "post/new"; // templates/post/new.html
    }

    @GetMapping("/post/new")
    public String showPostForm(Model model) {
        model.addAttribute("post", new Post());
        return "post/form"; // templates/post/form.html
    }

    // Í∏Ä Îì±Î°ù Ï≤òÎ¶¨
    @PostMapping
    public String createPost(@RequestParam String title,
                             @RequestParam String content,
                             Principal principal) {
        System.out.println(">> Principal.getName(): " + principal.getName());
        String userId = principal.getName();  // Î°úÍ∑∏Ïù∏Îêú ÏÇ¨Ïö©Ïûê ID
        postService.createPost(userId, title, content);
        return "redirect:/posts";
    }

    // Í∏Ä ÏàòÏ†ï Ìèº
    @GetMapping("/{postId}/edit")
    public String showEditForm(@PathVariable String postId, Model model) {
        Post post = postService.getPost(postId);
        model.addAttribute("post", post);
        return "post/edit";  // templates/post/edit.html
    }

    // Í∏Ä ÏàòÏ†ï Ï≤òÎ¶¨
    @PostMapping("/{postId}/edit")
    public String updatePost(@PathVariable String postId,
                             @RequestParam String title,
                             @RequestParam String content) {
        postService.updatePost(postId, title, content);
        return "redirect:/posts/" + postId;
    }

    // Í∏Ä ÏÇ≠Ï†ú
    @PostMapping("/{postId}/delete")
    public String deletePost(@PathVariable String postId) {
        postService.deletePost(postId);
        return "redirect:/posts";
    }
}